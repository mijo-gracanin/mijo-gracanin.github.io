<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>MijoCoder</title><description>A personal web page of Mijo Graƒçanin</description><link>https://mijo-gracanin.github.io</link><language>en</language><lastBuildDate>Wed, 30 Nov 2022 23:08:16 +0100</lastBuildDate><pubDate>Wed, 30 Nov 2022 23:08:16 +0100</pubDate><ttl>250</ttl><atom:link href="https://mijo-gracanin.github.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://mijo-gracanin.github.io/posts/core-data-programmatically</guid><title>CoreData without xcdatamodeld</title><description>Replacing xcdatamodeld with NSManagedObjectModel</description><link>https://mijo-gracanin.github.io/posts/core-data-programmatically</link><pubDate>Sat, 26 Nov 2022 13:00:00 +0100</pubDate><content:encoded><![CDATA[<h1>CoreData without xcdatamodeld</h1><p>CoreData model can be created programmatically with NSManagedObjectModel class.</p><p>Here is a project which demonstrates programmatic approach to CoreData: <a href="https://github.com/mijo-gracanin/CoreDataProgrammatically">Github</a></p><p>The app shows a list of shelves (master) end list of books (detail).</p><p>Here the first commit is a classic approach using an xcdatamodeld file, and the second uses NSManagedObjectModel.</p><p>Before deleting an xcdatamodeld file, it‚Äôs helpful to create ManagedObject classes by opening the xcdatamodeld file and selecting Editor &gt; Create NSManagedObject Subclass‚Ä¶</p><p>But why delete xcdatamodeld? I had to use ‚Äòcmake‚Äô and couldn‚Äôt find a way to generate an Xcode project with an xcdatamodeld file.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://mijo-gracanin.github.io/posts/blogging-with-publish</guid><title>How to create a blog with Publish</title><description>Experience in using Publish</description><link>https://mijo-gracanin.github.io/posts/blogging-with-publish</link><pubDate>Sat, 8 Jan 2022 13:14:00 +0100</pubDate><content:encoded><![CDATA[<h1>How to create a blog with Publish</h1><p>Official readme is a bit spartan, but it's enough to get started: <a href="https://github.com/JohnSundell/Publish">README.md</a> (v0.8.0)<br><br/></p><h3>The first thing that probably everyone will want to do is show the body of a section.</h3><p>For example, almost every blog has an "About" page, and that page has some title and a body. The default theme "Foundation" only shows the tile and a list of items.</p><p>The solution is to copy <code>Publish/Sources/Publish/API/Theme+Foundation.swift</code> into a new file <code>MyBlog/Sources/MyBlog/Theme+MyBlog.swift</code> and override relevant parts. For example: override method <code>makeSectionHTML(Section&lt;Site&gt;, PublishingContext&lt;Site&gt;)</code>. It's enough to replace <code>H1(section.title)</code> with <code>Div(section.body).class("content")</code>.<br><br/></p><h3>The second thing I <a href="https://github.com/mijo-gracanin/Ink/pull/1">changed</a> is the conversion of multiline blockquotes into HTML.</h3><p>The old logic removes newline characters and joins all lines. So, for example, the following markup:</p><pre><code>&gt; One
&gt; Two
&gt; Three
</code></pre><br/><p>Is turned into: <code>&lt;blockquote&gt;&lt;p&gt;One Two Three&lt;/p&gt;&lt;/blockquote&gt;</code> instead of <code>&lt;blockquote&gt;&lt;p&gt;One&lt;/p&gt;&lt;p&gt;Two&lt;/p&gt;&lt;p&gt;Three&lt;/p&gt;&lt;/blockquote&gt;</code></p><p>To change this behavior, we need to modify the Ink package. To do that, we need to reference the local Publish package, and then in local Publish, we need to reference the local Ink package because the remote dependencies are read-only. (Change <code>.package(name: "Ink", url: "https://github.com/johnsundell/ink.git", from: "0.2.0"),</code> to <code>.package(path: "/path/to/Ink")</code>)</p>]]></content:encoded></item><item><guid isPermaLink="true">https://mijo-gracanin.github.io/posts/new-blog</guid><title>My blog has a new home</title><description>Moving from mijocoder.blogspot.com</description><link>https://mijo-gracanin.github.io/posts/new-blog</link><pubDate>Fri, 7 Jan 2022 13:13:00 +0100</pubDate><content:encoded><![CDATA[<h1>My blog has a new home</h1><p>It's time for me to start blogging again, and this is an excellent opportunity to change my blogging platform.<br>Blogspot is ok - it's feature-rich, easy to set up, and mostly easy to use.<br>I had to manually edit generated HTML several times to achieve what I wanted, and mostly I wanted a consistent look for code blocks. Since I used several languages and a few external HTML generators, I ended up with a mixture of colors and fonts. Instead of wrestling with bloated HTML, I decided to use an approach that would give me more control.<br>Oh, and there will be no cookies for visitors to accept üòä<br><br>By the way, the old posts are still up on <a href="https://mijocoder.blogspot.com">mijocoder.blogspot.com</a></p>]]></content:encoded></item></channel></rss>